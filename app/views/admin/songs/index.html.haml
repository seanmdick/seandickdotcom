%link{ :rel => "stylesheet", :type => "text/css", :href => "/stylesheets/global.css"}
%link{ :rel => "stylesheet", :type => "text/css", :href => "/stylesheets/admin.css"}
%script{ :src => "/javascripts/jquery-1.3.2.min.js", :type => "text/javascript" }
%script{ :src => "/javascripts/jquery-ui-1.7.2.min.js", :type => "text/javascript" }
%script{ :src => "/javascripts/admin.js", :type => "text/javascript" }
%script{ :src => "/javascripts/audio-player.js", :type => "text/javascript" }
:javascript
  var AUTH_TOKEN = "#{form_authenticity_token}";
  jQuery(document).ajaxSend(function(event, request, settings) {
    if (typeof(AUTH_TOKEN) == "undefined") return;
    // settings.data is a serialized string like "foo=bar&baz=boink" (or null)
    settings.data = settings.data || "";
    settings.data += (settings.data ? "&" : "") + "authenticity_token=" + encodeURIComponent(AUTH_TOKEN);
  });

#pallette
  .song_form
    -form_for :song, Song.new, :url => "", :html => {:method => :post} do
      %input{:type => :text, :default_text => "Title", :value => "Title", :class => "new_song unselected", :name => "song[title]"}
      %a.submit_song Add
      %a.cancel Cancel
#content
  .songs
    %input{:type => :text, :default_text => "Find A Song", :value => "Find A Song", :class => "find_song unselected"}
    .songs_count="Currently #{pluralize(Song.count, "songs")}"
    -@songs.each do |song|
      .song.hidden{:song_id => song.id}
        %h3=song.title
        .versions
          %a.expand_handle=pluralize(song.versions.count, "version")
          %ul.hidden.versions_list
            -song.versions.each do |version|
              %li.version{:version_id => version.id}
                %a.delete_btn{:title => "delete this song version"}
                  X
                .description{:version_id => version.id, :full_text => version.description}
                  =truncate(version.description, 80)
                .player
                  =find_and_preserve player(version.url)
  %a.add_song new song
  .unattached
    %h3 Unattached Songs
    %ul.versions
      -SongVersion.unattached.each do |version|
        %li.version{:version_id => version.id}
          %a.delete_btn{:title => "delete this song version"}
            X
          %img.tiny_thumb{:src => version.image_url}
          .description.editable=version.description
          .player
            =find_and_preserve player(version.url)